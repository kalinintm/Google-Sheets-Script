function onEdit(e) {
  const sheet = e.source.getActiveSheet();
  const range = e.range;

  const row = range.getRow();
  const col = range.getColumn();

  const isStatusColumn = col === 9 || col === 14; // I или N
  if (!isStatusColumn) return;

  const status = (e.value || "").toString().toLowerCase();
  if (status !== "успешно" && status !== "успех") return;

  let card, bank, amount, dest, clearStartCol, destStartCol;

  if (row >= 4 && row <= 41 && col === 9) {
    // Команда 1 (F4:H41, I) → F46:I83
    card = sheet.getRange(row, 6).getValue();  // F
    bank = sheet.getRange(row, 7).getValue();  // G
    amount = sheet.getRange(row, 8).getValue(); // H
    dest = findEmptyRow(sheet, 46, 83, 6); // F
    clearStartCol = 6;  // F
    destStartCol = 6;   // F
  } else if (row >= 4 && row <= 41 && col === 14) {
    // Команда 2 (K4:M41, N) → K46:N83
    card = sheet.getRange(row, 11).getValue();  // K
    bank = sheet.getRange(row, 12).getValue();  // L
    amount = sheet.getRange(row, 13).getValue(); // M
    dest = findEmptyRow(sheet, 46, 83, 11); // K
    clearStartCol = 11; // K
    destStartCol = 11;  // K
  } else {
    return;
  }

  if (!card || !amount || dest === -1) return;

  const [destRow, destCol] = dest;

  // Запись в целевой диапазон
  sheet.getRange(destRow, destCol).setValue(card);
  sheet.getRange(destRow, destCol + 1).setValue(bank);
  sheet.getRange(destRow, destCol + 2).setValue(amount);
  sheet.getRange(destRow, destCol + 3).setValue("Успешно");

  // Очистка исходной строки
  sheet.getRange(row, clearStartCol, 1, 3).clearContent();
  sheet.getRange(row, col).clearContent();
}

function findEmptyRow(sheet, startRow, endRow, startCol) {
  const range = sheet.getRange(startRow, startCol, endRow - startRow + 1, 1);
  const values = range.getValues();

  for (let i = 0; i < values.length; i++) {
    if (!values[i][0]) {
      return [startRow + i, startCol];
    }
  }
  return -1;
}
